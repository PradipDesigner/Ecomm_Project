{"ast":null,"code":"import { Router } from '@angular/router';\nimport { SellerService } from '../services/seller.service';\nimport { inject } from '@angular/core';\nexport const AuthGuard = (route, state) => {\n  const sellerService = inject(SellerService);\n  const router = inject(Router);\n  let isSellerLoggedIn = localStorage.getItem('seller');\n  // let isUserLoggedIn = localStorage.getItem('user')\n  // if(isUserLoggedIn){\n  //   return true\n  // }\n  if (isSellerLoggedIn) {\n    return true;\n  } else {\n    return false;\n    router.navigate(['/']);\n  }\n};","map":{"version":3,"names":["Router","SellerService","inject","AuthGuard","route","state","sellerService","router","isSellerLoggedIn","localStorage","getItem","navigate"],"sources":["/Users/pradip/Desktop/Works/Ecomm_Project/src/app/Authentication/auth.guard.ts"],"sourcesContent":["import { CanActivateFn, Router } from '@angular/router';\nimport { SellerService } from '../services/seller.service';\nimport { inject } from '@angular/core';\n\nexport const AuthGuard: CanActivateFn = (route, state) => {\n  \n  const sellerService = inject(SellerService)\n  const router = inject(Router)\n\n\n  let isSellerLoggedIn = localStorage.getItem('seller');\n  // let isUserLoggedIn = localStorage.getItem('user')\n  // if(isUserLoggedIn){\n  //   return true\n  // }\n  if(isSellerLoggedIn){\n    return true;\n  }\n  else{\n    return false\n    router.navigate(['/'])\n  }\n\n};\n"],"mappings":"AAAA,SAAwBA,MAAM,QAAQ,iBAAiB;AACvD,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,MAAM,QAAQ,eAAe;AAEtC,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EAEvD,MAAMC,aAAa,GAAGJ,MAAM,CAACD,aAAa,CAAC;EAC3C,MAAMM,MAAM,GAAGL,MAAM,CAACF,MAAM,CAAC;EAG7B,IAAIQ,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EACrD;EACA;EACA;EACA;EACA,IAAGF,gBAAgB,EAAC;IAClB,OAAO,IAAI;GACZ,MACG;IACF,OAAO,KAAK;IACZD,MAAM,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;AAG1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}