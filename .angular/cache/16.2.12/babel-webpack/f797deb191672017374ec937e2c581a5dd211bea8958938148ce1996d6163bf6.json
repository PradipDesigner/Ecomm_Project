{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class SellerService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.isSellerLoggedIn = new BehaviorSubject(false);\n    this.isLoginError = new EventEmitter(false);\n  }\n  SellerSignUp(data) {\n    // console.log(\"service called\")\n    this.http.post('http://localhost:3000/seller', data, {\n      observe: 'response'\n    }).subscribe(result => {\n      // console.log(result)\n      // this.isSellerLoggedIn.next(true)\n      localStorage.setItem('seller', JSON.stringify(result.body));\n      this.router.navigate(['seller-dashboard']);\n    });\n  }\n  reloadSeller() {\n    if (localStorage.getItem('seller')) {\n      // this.isSellerLoggedIn.next(true);\n      this.router.navigate(['seller-dashboard']);\n    }\n  }\n  sellerLogin(data) {\n    // console.log(data)\n    this.http.get(`http://localhost:3000/seller?email=${data.email}&password=${data.password}`, {\n      observe: 'response'\n    }).subscribe(result => {\n      // console.log(result)\n      if (result && result.body && result.body.length) {\n        // console.log(\"user loged in\")\n        localStorage.setItem('seller', JSON.stringify(result.body));\n        this.router.navigate(['/seller-dashboard']);\n      } else {\n        // console.log(\"login failed\")\n        this.isLoginError.emit(true);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function SellerService_Factory(t) {\n    return new (t || SellerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SellerService,\n    factory: SellerService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","BehaviorSubject","SellerService","constructor","http","router","isSellerLoggedIn","isLoginError","SellerSignUp","data","post","observe","subscribe","result","localStorage","setItem","JSON","stringify","body","navigate","reloadSeller","getItem","sellerLogin","get","email","password","length","emit","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["/Users/pradip/Desktop/Works/Ecomm_Project/src/app/services/seller.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Login, SignUp } from '../data-type';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SellerService {\n  isSellerLoggedIn = new BehaviorSubject<boolean>(false)\n  \n  isLoginError = new EventEmitter<boolean>(false)\n\n  constructor(private http:HttpClient,private router:Router) { }\n\n\n  SellerSignUp(data:SignUp){\n    // console.log(\"service called\")\n\n    this.http.post('http://localhost:3000/seller',data, {observe: 'response'}).subscribe((result)=>{\n      // console.log(result)\n      // this.isSellerLoggedIn.next(true)\n      localStorage.setItem('seller',JSON.stringify(result.body));\n      this.router.navigate(['seller-dashboard']);\n    })\n    \n  }\n\n  reloadSeller(){\n    if(localStorage.getItem('seller')){\n      // this.isSellerLoggedIn.next(true);\n      this.router.navigate(['seller-dashboard']);\n    }\n  }\n\n  sellerLogin(data:Login){\n    // console.log(data)\n    this.http.get(`http://localhost:3000/seller?email=${data.email}&password=${data.password}`, {observe:'response'}).subscribe((result:any)=>{\n      // console.log(result)\n      if(result && result.body && result.body.length){\n        // console.log(\"user loged in\")\n        localStorage.setItem('seller',JSON.stringify(result.body))\n        this.router.navigate(['/seller-dashboard'])\n      }\n      else{\n        // console.log(\"login failed\")\n        this.isLoginError.emit(true)\n      }\n    })\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;AAGxD,SAASC,eAAe,QAAQ,MAAM;;;;AAKtC,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,IAAe,EAASC,MAAa;IAArC,KAAAD,IAAI,GAAJA,IAAI;IAAoB,KAAAC,MAAM,GAANA,MAAM;IAJlD,KAAAC,gBAAgB,GAAG,IAAIL,eAAe,CAAU,KAAK,CAAC;IAEtD,KAAAM,YAAY,GAAG,IAAIP,YAAY,CAAU,KAAK,CAAC;EAEc;EAG7DQ,YAAYA,CAACC,IAAW;IACtB;IAEA,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,8BAA8B,EAACD,IAAI,EAAE;MAACE,OAAO,EAAE;IAAU,CAAC,CAAC,CAACC,SAAS,CAAEC,MAAM,IAAG;MAC7F;MACA;MACAC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAACC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAACK,IAAI,CAAC,CAAC;MAC1D,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;IAC5C,CAAC,CAAC;EAEJ;EAEAC,YAAYA,CAAA;IACV,IAAGN,YAAY,CAACO,OAAO,CAAC,QAAQ,CAAC,EAAC;MAChC;MACA,IAAI,CAAChB,MAAM,CAACc,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;;EAE9C;EAEAG,WAAWA,CAACb,IAAU;IACpB;IACA,IAAI,CAACL,IAAI,CAACmB,GAAG,CAAC,sCAAsCd,IAAI,CAACe,KAAK,aAAaf,IAAI,CAACgB,QAAQ,EAAE,EAAE;MAACd,OAAO,EAAC;IAAU,CAAC,CAAC,CAACC,SAAS,CAAEC,MAAU,IAAG;MACxI;MACA,IAAGA,MAAM,IAAIA,MAAM,CAACK,IAAI,IAAIL,MAAM,CAACK,IAAI,CAACQ,MAAM,EAAC;QAC7C;QACAZ,YAAY,CAACC,OAAO,CAAC,QAAQ,EAACC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAACK,IAAI,CAAC,CAAC;QAC1D,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC;OAC5C,MACG;QACF;QACA,IAAI,CAACZ,YAAY,CAACoB,IAAI,CAAC,IAAI,CAAC;;IAEhC,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAzCU1B,aAAa,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbjC,aAAa;IAAAkC,OAAA,EAAblC,aAAa,CAAAmC,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}